Program(List(VarDecl(Id("n1"),FloatType),VarDecl(Id("n2"),FloatType),VarDecl(Id("n3"),FloatType),FuncDecl(Id("main"),List(),IntType,Block(List(VarDecl(Id("a"),FloatType),VarDecl(Id("b"),FloatType),VarDecl(Id("c"),FloatType),VarDecl(Id("determinant"),FloatType),VarDecl(Id("root1"),FloatType),VarDecl(Id("root2"),FloatType),VarDecl(Id("realPart"),FloatType),VarDecl(Id("imaginaryPart"),FloatType)),List(CallExpr(Id("printf"),List(StringLiteral("Enter coefficients a, b and c: "))),CallExpr(Id("scanf"),List(StringLiteral("%lf %lf %lf"),Id("a"),Id("b"),Id("c"))),BinaryOp("=",Id("determinant"),BinaryOp("-",BinaryOp("*",Id("b"),Id("b")),BinaryOp("*",BinaryOp("*",IntLiteral(4),Id("a")),Id("c")))),If(BinaryOp(">",Id("determinant"),IntLiteral(0)),Block(List(),List(BinaryOp("=",Id("root1"),BinaryOp("/",BinaryOp("+",UnaryOp("-",Id("b")),CallExpr(Id("sqrt"),List(Id("determinant")))),BinaryOp("*",IntLiteral(2),Id("a")))),BinaryOp("=",Id("root2"),BinaryOp("/",BinaryOp("-",UnaryOp("-",Id("b")),CallExpr(Id("sqrt"),List(Id("determinant")))),BinaryOp("*",IntLiteral(2),Id("a")))),CallExpr(Id("printf"),List(StringLiteral("root1 = %.2lf and root2 = %.2lf"),Id("root1"),Id("root2"))))),Some(If(BinaryOp("==",Id("determinant"),IntLiteral(0)),Block(List(),List(BinaryOp("=",Id("root1"),BinaryOp("=",Id("root2"),BinaryOp("/",UnaryOp("-",Id("b")),BinaryOp("*",IntLiteral(2),Id("a"))))),CallExpr(Id("printf"),List(StringLiteral("root1 = root2 = %.2lf;"),Id("root1"))))),Some(Block(List(),List(BinaryOp("=",Id("realPart"),BinaryOp("/",UnaryOp("-",Id("b")),BinaryOp("*",IntLiteral(2),Id("a")))),BinaryOp("=",Id("imaginaryPart"),BinaryOp("/",CallExpr(Id("sqrt"),List(UnaryOp("-",Id("determinant")))),BinaryOp("*",IntLiteral(2),Id("a")))),CallExpr(Id("printf"),List(StringLiteral("root1 = %.2lf+%.2lfi and root2 = %.2f-%.2fi"),Id("realPart"),Id("imaginaryPart"),Id("realPart"),Id("imaginaryPart"))))))))),Return(Some(IntLiteral(0))))))))