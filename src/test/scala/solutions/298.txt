Program(List(FuncDecl(Id("checkPrime"),List(VarDecl(Id("num"),IntType)),IntType,Block(List(VarDecl(Id("i"),IntType),VarDecl(Id("flg"),IntType)),List(BinaryOp("=",Id("flg"),IntLiteral(0)),For(BinaryOp("=",Id("i"),IntLiteral(2)),BinaryOp("<",Id("i"),BinaryOp("-",Id("num"),IntLiteral(1))),BinaryOp("=",Id("i"),BinaryOp("+",Id("i"),IntLiteral(1))),Block(List(),List(If(BinaryOp("==",BinaryOp("/",Id("num"),Id("i")),IntLiteral(0)),Block(List(),List(BinaryOp("=",Id("flg"),IntLiteral(1)),Break)),None)))),If(Id("flg"),Return(Some(IntLiteral(0))),Some(Return(Some(IntLiteral(1)))))))),FuncDecl(Id("main"),List(),IntType,Block(List(VarDecl(Id("i"),IntType),VarDecl(Id("n"),IntType)),List(CallExpr(Id("printf"),List(StringLiteral("Enter the value of N: "))),CallExpr(Id("scanf"),List(StringLiteral("%d"),Id("n"))),CallExpr(Id("printf"),List(StringLiteral("All prime numbers are from 1 to %d:\n"),Id("n"))),For(BinaryOp("=",Id("i"),IntLiteral(1)),BinaryOp("<=",Id("i"),Id("n")),BinaryOp("=",Id("i"),BinaryOp("+",Id("i"),IntLiteral(1))),Block(List(),List(If(CallExpr(Id("checkPrime"),List(Id("i"))),CallExpr(Id("printf"),List(StringLiteral("%d,"),Id("i"))),None),If(BinaryOp("==",Id("n"),IntLiteral(10)),Continue,Some(Break))))),Return(Some(IntLiteral(0))))))))