Program(List(FuncDecl(Id("factorial"),List(VarDecl(Id("n"),IntType)),FloatType,Block(List(VarDecl(Id("i"),IntType),VarDecl(Id("j"),IntType),VarDecl(Id("fact"),IntType)),List(BinaryOp("=",Id("fact"),IntLiteral(1)),If(BinaryOp("==",Id("n"),IntLiteral(1)),Return(Some(Id("fact"))),None),For(BinaryOp("=",Id("i"),Id("n")),BinaryOp(">=",Id("i"),IntLiteral(1)),UnaryOp("-",UnaryOp("-",Id("i"))),Block(List(),List(If(BinaryOp("<",Id("i"),IntLiteral(0)),Continue,Some(Block(List(),List(For(BinaryOp("=",Id("j"),IntLiteral(0)),BinaryOp("<",Id("j"),IntLiteral(100)),BinaryOp("=",Id("j"),BinaryOp("+",Id("j"),IntLiteral(1))),BinaryOp("=",Id("fact"),BinaryOp("*",Id("fact"),Id("i")))),If(BinaryOp("==",Id("j"),IntLiteral(90)),BinaryOp("=",Id("j"),BinaryOp("+",Id("j"),IntLiteral(2))),Some(Continue))))))))),Return(Some(Id("fact")))))),FuncDecl(Id("main"),List(),IntType,Block(List(VarDecl(Id("num"),IntType)),List(CallExpr(Id("printf"),List(StringLiteral("Enter an integer number :"))),CallExpr(Id("scanf"),List(StringLiteral("%d"),Id("num"))),CallExpr(Id("printf"),List(StringLiteral("\nFactorial of %d is = %ld"),Id("num"),CallExpr(Id("factorial"),List(Id("num"))))),Return(Some(IntLiteral(0))))))))